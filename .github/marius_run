# SAVE DATA RITHT HERE:
/lustre/blue/gtyson.fsu/yq23a.fsu

squeue -u $USER

# 
salloc --partition=gpu --gres=gpu:a100:1 --cpus-per-task=16 --mem=20G --time=5:00:00

module load conda
source ~/.bashrc

module load cuda/12.2

Then, adjust the version for numpy and pandas:



#If have build error with cmake, you can do:
cd /working_dir/GNNworkspace

rm -rf build

mkdir build

cd build

cmake -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=/working_dir/GNNworkspace/build/lib.linux-x86_64-3.10/marius -DPYTHON_EXECUTABLE=/usr/bin/python3 -DCMAKE_BUILD_TYPE=Release -DCMAKE_BUILD_WITH_INSTALL_RPATH=TRUE -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=TRUE -DUSE_CUDA=TRUE -DUSE_OMP=TRUE -DCMAKE_INSTALL_RPATH=$ORIGIN ..

#OR check src/cpp/python_bindings/data/*.cpp

#OR

git config --global --add safe.directory /working_dir/GNNworkspace
cd /working_dir/GNNworkspace
git submodule update --init --recursive
rm -rf build/

pip3 install numpy==1.21.6
pip3 install pandas==1.3.5
pip install cmake==3.24.3
pip install . --no-build-isolation



        #preprocess
        marius_preprocess --dataset ogbn_arxiv --output_dir datasets/arxiv_example/ --num_partitions 32
        marius_preprocess --dataset ogbn_products --output_dir datasets/products_example/ --num_partitions 32

        #preprocess for community-aware balanced partitioning
        PARTITION_METHOD=community marius_preprocess --dataset ogbn_arxiv --output_dir datasets/arxiv_example/ --num_partitions 32


        #training
        marius_train /working_dir/ZoeOnly-marius/examples/configuration/ogbn_arxiv.yaml
        marius_train /working_dir/marius/examples/configuration/ogbn_products.yaml
        marius_train /working_dir/marius/examples/configuration/freebase86m_COMET.yaml

CURRENT_DIR=`pwd`
docker run --gpus all -it -v $CURRENT_DIR:/working_dir/ marius:latest bash
cd GNNworkspace
pip3 install . --no-build-isolation
